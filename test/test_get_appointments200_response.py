# coding: utf-8

"""
    Prizz-Telecom Extranet API

    Prizz-Telecom Extranet API https://dev.prizz-telecom.fr/

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from prizz_extranet.models.get_appointments200_response import GetAppointments200Response

class TestGetAppointments200Response(unittest.TestCase):
    """GetAppointments200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetAppointments200Response:
        """Test GetAppointments200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetAppointments200Response`
        """
        model = GetAppointments200Response()
        if include_optional:
            return GetAppointments200Response(
                items = [
                    prizz_extranet.models.appointment.Appointment(
                        available_workflows = [
                            'Infracorp\\Services\\Workflow\\ClientLegalEntity\\CreateCommercialOffer\\Context'
                            ], 
                        id = 56, 
                        name = '', 
                        create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        house_number = 56, 
                        house_number_complement = '', 
                        street_name = '', 
                        postal_code = '', 
                        city_name = '', 
                        insee_code = '', 
                        service_contract = null, 
                        contact = null, 
                        tech = null, 
                        date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        accepted = True, 
                        status = 'to_plan', 
                        type = 'technical_tour', 
                        confirmation_process_id = 56, )
                    ]
            )
        else:
            return GetAppointments200Response(
        )
        """

    def testGetAppointments200Response(self):
        """Test GetAppointments200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
