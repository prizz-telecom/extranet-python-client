# coding: utf-8

"""
    Prizz-Telecom Extranet API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from prizz_extranet.models.comment_thread import CommentThread

class TestCommentThread(unittest.TestCase):
    """CommentThread unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CommentThread:
        """Test CommentThread
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CommentThread`
        """
        model = CommentThread()
        if include_optional:
            return CommentThread(
                id = 56,
                create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                owner = '',
                title = '',
                entity_class = '',
                entity_id = 56,
                public = '',
                subscribers = [
                    ''
                    ],
                comments = [
                    prizz_extranet.models.comment_tree.CommentTree(
                        comment = prizz_extranet.models.comment.Comment(
                            id = 56, 
                            create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            owner = '', 
                            content = '', 
                            content_type = '', ), 
                        children = [
                            prizz_extranet.models.comment_tree.CommentTree()
                            ], )
                    ]
            )
        else:
            return CommentThread(
        )
        """

    def testCommentThread(self):
        """Test CommentThread"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
