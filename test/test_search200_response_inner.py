# coding: utf-8

"""
    Prizz-Telecom Extranet API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from prizz_extranet.models.search200_response_inner import Search200ResponseInner

class TestSearch200ResponseInner(unittest.TestCase):
    """Search200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Search200ResponseInner:
        """Test Search200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Search200ResponseInner`
        """
        model = Search200ResponseInner()
        if include_optional:
            return Search200ResponseInner(
                index = '',
                query = '',
                id = '',
                legal_entity_ids = [
                    ''
                    ],
                name = '',
                address = '',
                siren = '',
                tel = '',
                email = '',
                contacts = [
                    prizz_extranet.models.contact_search.ContactSearch(
                        id = '', 
                        name = '', 
                        company_name = '', 
                        phone1 = '', 
                        phone2 = '', )
                    ],
                legal_entity_id = '',
                client_legal_entity_id = '',
                ref = '',
                create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                notes = '',
                section_names = '',
                addresses = [
                    ''
                    ],
                status = '',
                ref_client = '',
                description = ''
            )
        else:
            return Search200ResponseInner(
        )
        """

    def testSearch200ResponseInner(self):
        """Test Search200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
