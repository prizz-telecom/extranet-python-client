# coding: utf-8

"""
    Prizz-Telecom Extranet API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from prizz_extranet.models.create_eligibility import CreateEligibility

class TestCreateEligibility(unittest.TestCase):
    """CreateEligibility unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateEligibility:
        """Test CreateEligibility
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateEligibility`
        """
        model = CreateEligibility()
        if include_optional:
            return CreateEligibility(
                entities = [
                    prizz_extranet.models.client_legal_entity.ClientLegalEntity(
                        available_workflows = [
                            'Infracorp\\Services\\Workflow\\ClientLegalEntity\\CreateCommercialOffer\\Context'
                            ], 
                        id = 56, 
                        name = '', 
                        house_number = 56, 
                        house_number_complement = '', 
                        street_name = '', 
                        postal_code = '', 
                        city_name = '', 
                        insee_code = '', 
                        url = '', 
                        num_vat_intracommunity = '', 
                        siren = '', 
                        code_ape = '', 
                        rcs = '', 
                        tel = '', 
                        email = '', 
                        latitude = 1.337, 
                        longitude = 1.337, 
                        x = 1.337, 
                        y = 1.337, 
                        projection = '', 
                        arcep_code = '', 
                        contacts = [
                            prizz_extranet.models.contact.Contact(
                                id = 56, 
                                firstname = '', 
                                lastname = '', 
                                company_name = '', 
                                email = '', 
                                phone1 = '', 
                                phone2 = '', 
                                gender = '', 
                                create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        configured_contacts = [
                            prizz_extranet.models.typed_contact.TypedContact(
                                id = 56, 
                                create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                entity_id = 56, 
                                entity_class = '', 
                                contact = prizz_extranet.models.contact.Contact(
                                    id = 56, 
                                    firstname = '', 
                                    lastname = '', 
                                    company_name = '', 
                                    email = '', 
                                    phone1 = '', 
                                    phone2 = '', 
                                    gender = '', 
                                    create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                                type = 'DELIVERY', )
                            ], 
                        contracts = [
                            prizz_extranet.models.client_contract.ClientContract(
                                id = 56, 
                                name = '', 
                                price_list = prizz_extranet.models.price_list.PriceList(
                                    id = 56, 
                                    name = '', 
                                    legal_entity = prizz_extranet.models.legal_entity.LegalEntity(
                                        id = 56, 
                                        name = '', 
                                        house_number = 56, 
                                        house_number_complement = '', 
                                        street_name = '', 
                                        postal_code = '', 
                                        city_name = '', 
                                        insee_code = '', 
                                        url = '', 
                                        num_vat_intracommunity = '', 
                                        siren = '', 
                                        code_ape = '', 
                                        rcs = '', 
                                        tel = '', 
                                        email = '', 
                                        latitude = 1.337, 
                                        longitude = 1.337, 
                                        x = 1.337, 
                                        y = 1.337, 
                                        projection = '', 
                                        logo = '', ), 
                                    commercial_code = '', 
                                    description = '', 
                                    items = [
                                        prizz_extranet.models.price_list_item.PriceListItem(
                                            id = 56, 
                                            create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                            name = '', 
                                            unit_price = 56, 
                                            unit_price_str = '', 
                                            unit = '', 
                                            vat = '', 
                                            recurrence = 'monthly', 
                                            price_list_id = 56, 
                                            product = prizz_extranet.models.product.Product(
                                                id = 56, 
                                                name = '', 
                                                attributes = prizz_extranet.models.attributes.attributes(), 
                                                product_code = '', 
                                                group = prizz_extranet.models.product_group.ProductGroup(
                                                    name = '', 
                                                    type = 'bandwidth', ), ), 
                                            commercial_code = '', 
                                            description = '', 
                                            inside_offer_only = True, 
                                            to_estimate = True, 
                                            active = True, )
                                        ], ), 
                                payment_term_days = 56, 
                                vat_reverse_charge = True, 
                                invoice_consolidation = True, )
                            ], 
                        roles = [
                            prizz_extranet.models.user_role.UserRole(
                                id = 56, 
                                create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                user = prizz_extranet.models.user.User(
                                    id = 56, 
                                    firstname = '', 
                                    lastname = '', 
                                    company_name = '', 
                                    email = '', 
                                    phone1 = '', 
                                    phone2 = '', 
                                    gender = '', 
                                    create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                                role = '', )
                            ], )
                    ],
                responses = [
                    56
                    ]
            )
        else:
            return CreateEligibility(
        )
        """

    def testCreateEligibility(self):
        """Test CreateEligibility"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
