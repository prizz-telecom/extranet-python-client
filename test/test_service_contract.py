# coding: utf-8

"""
    Prizz-Telecom Extranet API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from prizz_extranet.models.service_contract import ServiceContract

class TestServiceContract(unittest.TestCase):
    """ServiceContract unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceContract:
        """Test ServiceContract
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceContract`
        """
        model = ServiceContract()
        if include_optional:
            return ServiceContract(
                available_workflows = [
                    'Infracorp\\Services\\Workflow\\ClientLegalEntity\\CreateCommercialOffer\\Context'
                    ],
                id = 56,
                name = '',
                create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                canceled_reason = '',
                canceled_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                status = 'new',
                legal_entity_id = 56,
                client_contract_id = 56,
                subscription_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                activation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                first_activation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                offer = prizz_extranet.models.offer.Offer(
                    id = 56, 
                    name = '', 
                    main_offer_item = prizz_extranet.models.offer_item.OfferItem(
                        id = 56, 
                        name = '', 
                        create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        min_count = 56, 
                        max_count = 56, 
                        product = prizz_extranet.models.product.Product(
                            id = 56, 
                            name = '', 
                            attributes = prizz_extranet.models.attributes.attributes(), 
                            product_code = '', 
                            group = prizz_extranet.models.product_group.ProductGroup(
                                name = '', 
                                type = 'bandwidth', ), ), 
                        eligibility_string = '', ), 
                    offer_type = 'DELIVERY_DOOR', ),
                client = prizz_extranet.models.client_legal_entity.ClientLegalEntity(
                    available_workflows = [
                        'Infracorp\\Services\\Workflow\\ClientLegalEntity\\CreateCommercialOffer\\Context'
                        ], 
                    id = 56, 
                    name = '', 
                    house_number = 56, 
                    house_number_complement = '', 
                    street_name = '', 
                    postal_code = '', 
                    city_name = '', 
                    insee_code = '', 
                    url = '', 
                    num_vat_intracommunity = '', 
                    siren = '', 
                    code_ape = '', 
                    rcs = '', 
                    tel = '', 
                    email = '', 
                    latitude = 1.337, 
                    longitude = 1.337, 
                    x = 1.337, 
                    y = 1.337, 
                    projection = '', 
                    arcep_code = '', 
                    contacts = [
                        prizz_extranet.models.contact.Contact(
                            id = 56, 
                            firstname = '', 
                            lastname = '', 
                            company_name = '', 
                            email = '', 
                            phone1 = '', 
                            phone2 = '', 
                            gender = '', 
                            create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    configured_contacts = [
                        prizz_extranet.models.typed_contact.TypedContact(
                            id = 56, 
                            create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            entity_id = 56, 
                            entity_class = '', 
                            contact = prizz_extranet.models.contact.Contact(
                                id = 56, 
                                firstname = '', 
                                lastname = '', 
                                company_name = '', 
                                email = '', 
                                phone1 = '', 
                                phone2 = '', 
                                gender = '', 
                                create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                            type = 'DELIVERY', )
                        ], 
                    contracts = [
                        prizz_extranet.models.client_contract.ClientContract(
                            id = 56, 
                            name = '', 
                            price_list = prizz_extranet.models.price_list.PriceList(
                                id = 56, 
                                name = '', 
                                legal_entity = prizz_extranet.models.legal_entity.LegalEntity(
                                    id = 56, 
                                    name = '', 
                                    house_number = 56, 
                                    house_number_complement = '', 
                                    street_name = '', 
                                    postal_code = '', 
                                    city_name = '', 
                                    insee_code = '', 
                                    url = '', 
                                    num_vat_intracommunity = '', 
                                    siren = '', 
                                    code_ape = '', 
                                    rcs = '', 
                                    tel = '', 
                                    email = '', 
                                    latitude = 1.337, 
                                    longitude = 1.337, 
                                    x = 1.337, 
                                    y = 1.337, 
                                    projection = '', 
                                    logo = '', ), 
                                commercial_code = '', 
                                description = '', 
                                items = [
                                    prizz_extranet.models.price_list_item.PriceListItem(
                                        id = 56, 
                                        create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        name = '', 
                                        unit_price = 56, 
                                        unit_price_str = '', 
                                        unit = '', 
                                        vat = '', 
                                        recurrence = 'monthly', 
                                        price_list_id = 56, 
                                        product = prizz_extranet.models.product.Product(
                                            id = 56, 
                                            name = '', 
                                            attributes = prizz_extranet.models.attributes.attributes(), 
                                            product_code = '', 
                                            group = prizz_extranet.models.product_group.ProductGroup(
                                                name = '', 
                                                type = 'bandwidth', ), ), 
                                        commercial_code = '', 
                                        description = '', 
                                        inside_offer_only = True, 
                                        to_estimate = True, 
                                        active = True, )
                                    ], ), 
                            payment_term_days = 56, 
                            vat_reverse_charge = True, 
                            invoice_consolidation = True, )
                        ], 
                    roles = [
                        prizz_extranet.models.user_role.UserRole(
                            id = 56, 
                            create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            user = prizz_extranet.models.user.User(
                                id = 56, 
                                firstname = '', 
                                lastname = '', 
                                company_name = '', 
                                email = '', 
                                phone1 = '', 
                                phone2 = '', 
                                gender = '', 
                                create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                            role = '', )
                        ], ),
                ref_client = '',
                ref_service = '',
                description = '',
                services = [
                    prizz_extranet.models.service.Service(
                        id = 56, 
                        name = '', 
                        unit_price_discount = 56, 
                        unit_price_discount_str = '', 
                        house_number = 56, 
                        house_number_complement = '', 
                        street_name = '', 
                        postal_code = '', 
                        city_name = '', 
                        insee_code = '', 
                        create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        attributes = prizz_extranet.models.attributes.attributes(), 
                        quantity = 56, 
                        unit_price = 56, 
                        unit_price_str = '', 
                        unit = '', 
                        vat = '', 
                        recurrence = 'monthly', 
                        latitude = 1.337, 
                        longitude = 1.337, 
                        x = 1.337, 
                        y = 1.337, 
                        projection = '', 
                        product = prizz_extranet.models.product.Product(
                            id = 56, 
                            name = '', 
                            attributes = prizz_extranet.models.attributes.attributes(), 
                            product_code = '', 
                            group = prizz_extranet.models.product_group.ProductGroup(
                                name = '', 
                                type = 'bandwidth', ), ), 
                        status = 'new', 
                        subscription_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        activation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        termination_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        service_contract_id = 56, 
                        paid_until = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                nrcs = [
                    prizz_extranet.models.service_contract_nrc.ServiceContractNrc(
                        id = 56, 
                        create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '', 
                        unit_price = 56, 
                        unit_price_str = '', 
                        unit = '', 
                        vat = '', 
                        recurrence = 'monthly', 
                        quantity = 56, 
                        unit_price_discount = 56, 
                        unit_price_discount_str = '', 
                        attributes = prizz_extranet.models.attributes.attributes(), 
                        house_number = 56, 
                        house_number_complement = '', 
                        street_name = '', 
                        postal_code = '', 
                        city_name = '', 
                        insee_code = '', 
                        latitude = 1.337, 
                        longitude = 1.337, 
                        x = 1.337, 
                        y = 1.337, 
                        projection = '', 
                        service_contract_id = 56, 
                        base_item_id = 56, 
                        billed = True, 
                        price = 56, 
                        price_str = '', 
                        va_trate = 1.337, 
                        commercial_code = '', 
                        description = '', 
                        type = '', )
                    ],
                planned_activation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                sold_activation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                commitment_end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                attributes = { },
                consolidated_attributes = { },
                consolidated_attributes_staging_or_new = { },
                commercial_offers = [
                    prizz_extranet.models.service_contract_commercial_offers_inner.ServiceContract_commercialOffers_inner(
                        id = 56, 
                        name = '', )
                    ],
                contacts = [
                    prizz_extranet.models.contact.Contact(
                        available_workflows = [
                            'Infracorp\\Services\\Workflow\\ClientLegalEntity\\CreateCommercialOffer\\Context'
                            ], 
                        id = 56, 
                        firstname = '', 
                        lastname = '', 
                        company_name = '', 
                        email = '', 
                        phone1 = '', 
                        phone2 = '', 
                        gender = '', 
                        create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                configured_contacts = [
                    prizz_extranet.models.typed_contact.TypedContact(
                        available_workflows = [
                            'Infracorp\\Services\\Workflow\\ClientLegalEntity\\CreateCommercialOffer\\Context'
                            ], 
                        id = 56, 
                        create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        entity_id = 56, 
                        entity_class = '', 
                        contact = prizz_extranet.models.contact.Contact(
                            id = 56, 
                            firstname = '', 
                            lastname = '', 
                            company_name = '', 
                            email = '', 
                            phone1 = '', 
                            phone2 = '', 
                            gender = '', 
                            create_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            last_modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        type = 'DELIVERY', )
                    ],
                replaces = 56
            )
        else:
            return ServiceContract(
        )
        """

    def testServiceContract(self):
        """Test ServiceContract"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
